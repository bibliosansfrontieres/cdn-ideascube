---
- name: check we can use /dev/net/tun
  stat: path=/dev/net/tun
  register: tundevice

- name: Sorry, tinc requires /dev/net/tun. Aborting.
  fail:
    msg: "no /dev/net/tun device found."
  when: tundevice.stat.exists == false

- name: Generate new mac address
  shell: echo "{{ ansible_hostname }}"|md5sum|sed 's/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02:\1:\2:\3:\4:\5/' ; echo
  register: tinc_if_mac

- name: Set tinc name
  set_fact:
    device_tinc_name: "{{ server_name | replace('-', '_') }}"

- debug: msg="Tinc mac address {{ tinc_if_mac.stdout }}, name {{device_tinc_name}}"

- name: insert/update vpn_name configuration in /etc/network/interfaces
  blockinfile:
    block: "{{ lookup('template', 'vpn_interface.j2') }}"
    dest: "/etc/network/interfaces.d/testvpn"
    marker: "## {mark} {{vpn_name}} VPN interface"

- name: Install tinc, rsync
  apt:
    name: "{{ item }}"
    state: present
    cache_valid_time: 3600
  with_items:
  - tinc
  - rsync

- name: ensure tinc vpn name directory exists
  file:
    path: /etc/tinc/{{ vpn_name }}/hosts
    recurse: True
    state: directory

- name: ensure tinc.conf exists for vpn name
  template:
    src: tinc.conf.j2
    dest: /etc/tinc/{{ vpn_name }}/tinc.conf

- name: Add interfaces controler for remote vpn_master_server
  copy:
    src: hosts/vpn_master_server-up
    dest: /etc/tinc/{{ vpn_name }}/hosts/{{vpn_master_server}}-up
    mode: 0750

- name: Add interfaces controler for remote vpn_master_server
  copy:
    src: hosts/vpn_master_server-down
    dest: /etc/tinc/{{ vpn_name }}/hosts/{{vpn_master_server}}-down
    mode: 0750

- name: add pubkeys for tincmaster
  copy:
    src: hosts/tincmaster
    dest: /etc/tinc/{{ vpn_name }}/hosts/tincmaster
    mode: 0750

- name: set default options for tinc
  template:
    src: default.j2
    dest: /etc/default/tinc
  notify:
    - reload tinc

- name: Add vpn_name to /etc/tinc/nets.boot file
  lineinfile:
    dest: /etc/tinc/nets.boot
    line: '{{ vpn_name }}'
    create: yes
  notify:
    - restart tinc

- name: create tinc private key
  shell: tincd -n {{ vpn_name }} -K4096
  args:
    creates: /etc/tinc/{{ vpn_name }}/rsa_key.priv

- name: create tinc-up file
  template:
    src: tinc-up.j2
    dest: /etc/tinc/{{ vpn_name }}/tinc-up
    mode: 0755
  notify:
    - reload tinc

- name: create tinc-down file
  template:
    src: tinc-down.j2
    dest: /etc/tinc/{{ vpn_name }}/tinc-down
    mode: 0755
  notify:
    - reload tinc

- name: Make sure tinc logs are rotated
  copy:
    src: tinc.logrotate
    dest: /etc/logrotate.d/tinc
    mode: 0644

- name: Copy tinc systemd unit
  copy:
    src: tinc@.service
    dest: /etc/systemd/system/tinc@.service
    mode: 0644

- name: Enable unit tinc
  service:
    name: tinc@{{ vpn_name }}.service
    enabled: yes
    state: started

- name: send the public key to central nodes
  shell: rsync /etc/tinc/{{ vpn_name }}/hosts/{{device_tinc_name}}  {{ central_server }}:/ansible/tinc-{{ vpn_name }}/
